- Input Options:
    - samfile:
        positional: True
        help: Path to alignment file. Alignment file can be in SAM or BAM
          format. File must be collated so that all alignments for a
          read pair appear sequentially in the file.
    - gtffile:
        positional: True
        help: Path to annotation file (GTF format)
    - attribute:
        default: locus
        help: GTF attribute that defines a transposable element locus. GTF
          features that share the same value for --attribute will be
          considered as part of the same locus.
    - no_feature_key:
        default: __no_feature
        help: Used internally to represent alignments. Must be different
          from all other feature names.
    - ncpu:
        default: 1
        type: int
        help: Number of cores to use. (Multiple cores not supported yet).
    - tempdir:
        help: Path to temporary directory. Temporary files will be stored
          here. Default uses python tempfile package to create the
          temporary directory.
- Reporting Options:
    - quiet:
        action: store_true
        help: Silence (most) output.
    - debug:
        action: store_true
        help: Print debug messages.
    - logfile:
        type: argparse.FileType('r')
        help: Log output to this file.
    - outdir:
        default: .
        help: Output directory.
    - exp_tag:
        default: telescope
        help: Experiment tag
    - updated_sam:
        action: store_true
        help: Generate an updated alignment file.
- Run Modes:
    - reassign_mode:
        default: exclude
        choices:
          - exclude
          - choose
          - average
          - conf
          - unique
        help: >
          Reassignment mode. After EM is complete, each fragment is
          reassigned according to the expected value of its membership
          weights. The reassignment method is the method for resolving
          the "best" reassignment for fragments that have multiple
          possible reassignments.
          Available modes are: "exclude" - fragments with multiple best
          assignments are excluded from the final counts; "choose" -
          the best assignment is randomly chosen from among the set of
          best assignments; "average" - the fragment is divided evenly
          among the best assignments; "conf" - only assignments that
          exceed a certain threshold (see --conf_prob) are accepted;
          "unique" - only uniquely aligned reads are included.
          NOTE: Results using all assignment modes are included in the
          statistics report by default. This argument determines what
          mode will be used for the outputted counts file.
    - conf_prob:
        type: float
        default: 0.9
        help: Minimum probability for high confidence assignment.
    - overlap_mode:
        default: threshold
        choices:
          - threshold
          - intersection-strict
          - union
        help: Overlap mode. The method used to determine whether a fragment
          overlaps feature.
    - overlap_threshold:
        type: float
        default: 0.2
        help: Fraction of fragment that must be contained within a feature
          to be assigned to that locus. Ignored if --overlap_method is
          not "threshold".
    - annotation_class:
        default: intervaltree
        choices:
          - intervaltree
          - htseq
        help: Annotation class to use for finding overlaps. Both htseq and
          intervaltree appear to yield identical results. Performance
          differences are TBD.
    - stranded_mode:
        type: str
        default: None
        choices:
          - None
          - RF
          - R
          - FR
          - F
        help: Options for considering feature strand when assigning reads.
          If None, for each feature in the annotation, returns counts for the positive strand and negative strand.
          If not None, specifies the orientation of paired end reads (RF - read 1 reverse strand, read 2 forward strand) and
          single end reads (F - forward strand).
- Model Parameters:
    - pi_prior:
        type: int
        default: 0
        help: Prior on π. Equivalent to adding n unique reads.
    - theta_prior:
        type: int
        default: 200000
        help: >
          Prior on θ. Equivalent to adding n non-unique reads. NOTE: It
          is recommended to set this prior to a large value. This
          increases the penalty for non-unique reads and improves
          accuracy.
    - em_epsilon:
        type: float
        default: 1e-7
        help: EM Algorithm Epsilon cutoff
    - max_iter:
        type: int
        default: 100
        help: EM Algorithm maximum iterations
    - use_likelihood:
        action: store_true
        help: Use difference in log-likelihood as convergence criteria.
    - skip_em:
        action: store_true
        help: Exits after loading alignment and saving checkpoint file.